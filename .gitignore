abc-ci-builds

*.tar.gz

*.exe
src/bitcoin
src/doged
src/doge-cli
src/doge-seeder
src/doge-tx
src/doge-chainstate
src/doge-wallet
src/test/test_bitcoin
src/test/test_bitcoin_fuzzy
src/qt/test/test_doge-qt

src/obj

src/qt/*.moc
src/qt/moc_*.cpp
src/qt/forms/ui_*.h

src/qt/test/moc*.cpp

src/qt/doge-qt.config
src/qt/doge-qt.creator
src/qt/doge-qt.creator.user
src/qt/doge-qt.files
src/qt/doge-qt.includes

.deps
.libs
.*.swp
*.*~*
*.bak
*.rej
*.orig
*.pyc
*.o
*.o-*
*.a
*.pb.cc
*.pb.h

*.log
*.trs
*.zip

*.json.h
*.raw.h

# Only ignore unexpected patches
*.patch
!depends/patches/**/*.patch
!contrib/guix/**/*.patch

# Compilation and Qt preprocessor part
*.qm
Makefile
doge-qt
Doge-Qt.app

# Resources cpp
qrc_*.cpp

# Mac specific
.DS_Store
build

#lcov
*.gcno
*.gcda
/*.info

#build tests
test/config.ini
test/cache/*
*.mypy_cache/

!src/leveldb*/Makefile

contrib/devtools/split-debug.sh

# JS artifacts at every level
node_modules/
build/
.next/
.docusaurus/
.nyc_output/
test-results.xml
test_results/

# compiled WebAssembly
modules/ecash-lib/src/ffi/

# Ignore secrets for JS/TS apps that use secret keys, e.g. databases or telegram bots
secrets.js
secrets.ts

# Local Netlify folder
.netlify

# arc liberate cache file
.phutil_module_cache

# GUIX
/output/
/var/
/distsrc-*/
web/e.cash/public/rss.xml

# Cargo builds
target/
